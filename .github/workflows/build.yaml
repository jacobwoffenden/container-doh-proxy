---
name: "Build Image"

on:
  push:
    branches-ignore:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ "amd64", "arm64", "386", "arm/v7", arm/v6 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare Build Arguments
        id: prepare_build_args
        run: |
          echo ::set-output name=build_created::$( date --utc +"%Y-%m-%dT%H:%M:%SZ" )
          echo ::set-output name=build_version::$( echo "${{ github.sha }}" )
          echo ::set-output name=build_revision::$( echo "${{ github.sha }}" )

      - name: Set up QEMU
        id: setup_qemu
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Container
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Containerfile
          platforms: linux/${{ matrix.platform }}
          load: true
          tags: |
            doh-proxy:latest
          build-args: |
            BUILD_CREATED=${{ steps.prepare_build_args.outputs.build_created }}
            BUILD_VERSION=${{ steps.prepare_build_args.outputs.build_version }}
            BUILD_REVISION=${{ steps.prepare_build_args.outputs.build_revision }}

      - name: Test cloudflared
        id: test_cloudflared
        run: |
          docker run --rm --entrypoint /usr/local/bin/cloudflared doh-proxy:latest version

      - name: Scan Container
        id: scan
        uses: anchore/scan-action@v3
        with:
          image: doh-proxy:latest
          fail-build: true
          severity-cutoff: critical
          acs-report-enable: true

      - name: Upload Anchore scan SARIF report
        id: upload_serif_report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
