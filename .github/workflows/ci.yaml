---
name: CI

on:
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  lint-build-structure-scan:
    name: Lint, Build, Structure Test, and Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    strategy:
      matrix:
        platform: [ "amd64", "arm64", "386", "arm/v7", arm/v6 ]
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Prepare Environment
        id: prepare_environment
        run: |
          echo "build_created=$( date --utc +"%Y-%m-%dT%H:%M:%SZ" )" >> "${GITHUB_ENV}"
          echo "build_revision=$( echo "${{ github.sha }}" )" >> "${GITHUB_ENV}"
          echo "build_version=$( echo "${{ github.sha }}" )" >> "${GITHUB_ENV}"

      - name: Set up Docker QEMU
        id: setup_qemu
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@ecf95283f03858871ff00b787d79c419715afc34 # v2.7.0

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        id: hadolint
        with:
          dockerfile: Dockerfile

      - name: Build Image
        id: build_image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: Dockerfile
          context: .
          platforms: linux/${{ matrix.platform }}
          load: true
          tags: |
            doh-proxy:${{ github.sha }}
          build-args: |
            BUILD_CREATED=${{ env.build_created }}
            BUILD_REVISION=${{ env.build_revision }}
            BUILD_VERSION=${{ env.build_version }}

      - name: Container Structure Test
        id: container_structure_test
        uses: docker://gcr.io/gcp-runtimes/container-structure-test:latest
        with:
          args: test --image doh-proxy:${{ github.sha }} --config test/container-structure.yaml

      - name: Trivy Scan
        id: trivy_scan
        uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.11.2
        continue-on-error: true
        with:
          image-ref: doh-proxy:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy Scan SARIF report
        id: upload_trivy_sarif
        uses: github/codeql-action/upload-sarif@cdcdbb579706841c47f7063dda365e292e5cad7a # v2.13.4
        with:
          sarif_file: trivy-results.sarif

  test-providers:
    name: Test Providers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Test Providers
        id: test_providers
        run: |
          sudo apt install --yes dnsutils
          bash scripts/provider-test.sh
        env:
          CLOUDFLARE_ZERO_TRUST_ID: ${{ secrets.CLOUDFLARE_ZERO_TRUST_ID }}
          NEXTDNS_ID: ${{ secrets.NEXTDNS_ID }}
